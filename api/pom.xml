<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <repositories>
        <repository>
            <id>maven-central</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>mavenrepository</id>
            <url>https://mvnrepository.com/artifact/</url>
        </repository>
    </repositories>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>spring-api</artifactId>
    <groupId>nl.acmelabs</groupId>
    <version>1.0-SNAPSHOT</version>
    <name>api</name>
    <packaging>jar</packaging>

    <properties>

        <flyway.licenseKey>
            SOME FAKE KEY
        </flyway.licenseKey>
        <flyway.table>FLYWAY_SCHEMA_HISTORY</flyway.table>
        <flyway.oracle.sqlplus>true</flyway.oracle.sqlplus>
        <flyway.oracle.sqlplusWarn>true</flyway.oracle.sqlplusWarn>
        <flyway.baselineOnMigrate>true</flyway.baselineOnMigrate>
        <flyway-maven-plugin.version>6.2.1</flyway-maven-plugin.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <start-class>nl.acmelabs.someapp.SomeApplication</start-class>
        <maven.version>1.0</maven.version>
        <java.version>11</java.version>

        <log4j.log4j.version>1.2.16</log4j.log4j.version>
        <com.oracle.ojdbc8.version>12.2.0.1</com.oracle.ojdbc8.version>

        <!-- plugins -->
        <thin.version>1.0.22.RELEASE</thin.version>
        <spring-boot.version>2.3.4.RELEASE</spring-boot.version>
        <oracle-spatial.sdo-api.version>11.2.0</oracle-spatial.sdo-api.version>
        <org.geotools.version>24.2</org.geotools.version>

        <junit.version>4.11</junit.version>
        <mockito.core.version>2.23.4</mockito.core.version>
        <org.assertj.assertj-core.version>3.6.2</org.assertj.assertj-core.version>
        <hibernate-spatial.version>5.4.18.Final</hibernate-spatial.version>
        <hibernate-validator.version>5.4.3.Final</hibernate-validator.version>
        <geolatte.version>1.5.1</geolatte.version>
        <springfox-boot-starter.version>3.0.0</springfox-boot-starter.version>
        <lombok.version>1.18.12</lombok.version>
        <querydsl.version>4.3.1</querydsl.version>
        <org.mapstruct.version>1.4.0.Beta3</org.mapstruct.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.log4j.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc8</artifactId>
                <version>${com.oracle.ojdbc8.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- TESTS -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${org.assertj.assertj-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>[5.2.9.RELEASE]</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-spatial</artifactId>
                <version>${hibernate-spatial.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geolatte</groupId>
                <artifactId>geolatte-geom</artifactId>
                <version>${geolatte.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geolatte</groupId>
                <artifactId>geolatte-geojson</artifactId>
                <version>${geolatte.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox-boot-starter.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- auto genrated rest functionality based on defined repository interfaces -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!-- auto generated crud function repositories, includes Spring Boot autoconfiguration  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${spring-boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- above was 5.1.3 and this mismatched spring-orm version which should be the same -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- less code utilities -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>


        <!-- in memory db for faster development, testing and deployment build without the need to wait for ops to release a db -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
        </dependency>

        <!-- adds evenmore func to genrating custom finder implementaitons findByUser code less -->
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>${querydsl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>${querydsl.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- SPATIAL -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-spatial</artifactId>
        </dependency>


        <dependency>
            <groupId>oracle</groupId>
            <artifactId>sdoapi</artifactId>
            <version>${oracle-spatial.sdo-api.version}</version>
        </dependency>
<!--        <dependency> No longer in Maven Repos -->
<!--            <groupId>org.geotools</groupId>-->
<!--            <artifactId>gt-shapefile</artifactId>-->
<!--            <version>${org.geotools.version}</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.geolatte</groupId>
            <artifactId>geolatte-geom</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geolatte</groupId>
            <artifactId>geolatte-geojson</artifactId>
        </dependency>

        <!-- support for testing -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.10.4</version>
        </dependency>

        <!-- swagger for documentation -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
        </dependency>

        <!-- DTO MAPPING -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <!-- TODO Idsme try-out hall browser, activate or remove -->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.data</groupId>-->
        <!--            <artifactId>spring-data-rest-hal-browser</artifactId>-->
        <!--            <version>3.2.4.RELEASE</version>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams</artifactId>
            <version>1.0.3</version>
        </dependency>
    </dependencies>


    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>maven-apt-plugin</artifactId>
                <version>${maven.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Dependencies>com.oracle.jdbc</Dependencies>
                        </manifestEntries>
                        <manifest>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.4.RELEASE</version>
            </plugin>
            <plugin>
                <groupId>org.flywaydb.enterprise</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway-maven-plugin.version}</version>
                <configuration>
                    <serverId>${db.serverId}</serverId>
                    <user>${db.user}</user>
                    <password>${db.password}</password>
                    <url>${db.url}</url>
                    <schemas>${db.schemas}</schemas>
                    <defaultSchema>${db.defaultSchema}</defaultSchema>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version> <!-- Replace with the desired version -->
                <configuration>
                    <source>11</source> <!-- Replace with the desired Java version -->
                    <target>11</target> <!-- Replace with the desired Java version -->
                </configuration>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>LOCAL</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <db.serverId/>
                <db.user>somename</db.user>
                <db.password>somename</db.password>
                <db.url>jdbc:oracle:thin:@localhost:1521:XE</db.url>
                <db.schemas>SOMENAME</db.schemas>
                <db.defaultSchema>SOMENAME</db.defaultSchema>
            </properties>
        </profile>
    </profiles>
</project>
